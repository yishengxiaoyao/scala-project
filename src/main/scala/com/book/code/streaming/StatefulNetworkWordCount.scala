package com.book.code.streaming

import org.apache.spark.SparkConf
import org.apache.spark.streaming.{Minutes, Seconds, StreamingContext}

object StatefulNetworkWordCount {
  def main(args: Array[String]) {
    if (args.length < 2) {
      System.err.println("Usage: <hostname> <port>")
      System.exit(1)
    }

    val sparkConf = new SparkConf().setAppName("StatefulNetworkWordCount")

    // Create the context with a 2 second batch size
    // 注意实际上 StreamingContext 也可以通过 StreamingContext.getOrCreate(checkpointDirectory, functionToCreateContext _) 来获取，
    // 这能保证 metadata 也是具备容灾功能的，一般不太需要
    val ssc = new StreamingContext(sparkConf, Seconds(2))
    ssc.checkpoint("checkpoint")

    // Create a ReceiverInputDStream on target ip:port and count the
    // words in input stream of \n delimited test (eg. generated by 'nc')
    val lines = ssc.socketTextStream(args(0), args(1).toInt)

    val words = lines.flatMap(_.split(" "))
    val wordDstream = words.map(x => (x, 1))

    val stateDstream = wordDstream.updateStateByKey(updateFunction _)

    // 设置 checkpoint 的周期
    stateDstream.checkpoint(Minutes(1))

    stateDstream.print()

    ssc.start()
    ssc.awaitTermination()
  }

  def updateFunction(newValues: Seq[Int], runningCount: Option[Int]): Option[Int] = {
    val newCount = newValues.reduce(_ + _) + runningCount.getOrElse(0)
    Some(newCount)
  }
}